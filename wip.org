* DONE Make baseline work
  CLOSED: [2017-09-21 Thu 22:10]
* DONE Make report work
  CLOSED: [2017-09-21 Thu 22:09]
* DONE counts command
  CLOSED: [2017-10-26 Thu 15:39]
* DONE Update unittest runner to use new "args" protocol
  CLOSED: [2017-10-26 Thu 14:01]
* TODO create plugins for execution engines
* DONE Update exec to use config file
  CLOSED: [2017-10-26 Thu 12:52]
  This is going along nicely. Local seems to work, and celery is close (if not
  working). I need to test it out.

** DONE Test celery with config
   CLOSED: [2017-10-26 Thu 12:52]
   This seems to work!
* DONE Get rid of load?
  CLOSED: [2017-10-26 Thu 13:47]
* DONE Get rid of run?
  CLOSED: [2017-09-21 Thu 22:04]
* DONE Update affected docstrings
  CLOSED: [2017-10-27 Fri 14:02]
** init
** baseline
** exec
* TODO Document the config file format
* DONE new command for creating default config file
  CLOSED: [2017-10-27 Fri 14:00]
* Workers
  How can workers use the new config system? Can we just serialize the config
  and send it in that way? We wold probably want two modes: one where we send in
  the config as a string and another where the worker reads a config file (so
  that it's easy to run the worker manually).
** DONE Workers should accept a config file on the command line
   CLOSED: [2017-10-25 Wed 16:56]
   They'll take the config file along with the parameters telling them what mutation to run.
   This will make it easier to run workers locally/manually when necessary.
** DONE Workers should be able to read their config via stdin
   CLOSED: [2017-10-25 Wed 16:56]
   This is how they'll get config under normal operation.
* TODO No-local-import
  This should probably be part of the config file. Does it only apply to
  workers? Or does it apply to baseline as well?

* DONE Data duplication
  CLOSED: [2017-10-26 Thu 13:46]
  Right now we store things like test-runner and args in both the session config
  and the work-db. We should avoid storing data in two places...or if we do we
  should provide a way to detect when they're out of sync. For example if
  someone creates a work-db from a session and then changes the session, CR
  should notice this and refuse to run.

  Or maybe it's best to simply avoid the duplication and not store things in the
  workdb. Then work-db and session are intimately bound. And we're still stuck
  with the fact that a workdb and sesssion might have different values.

  Maybe it's best to keep the duplication and let the work-db be the source of
  truth for execution (i.e. any time after init).

  Or...maybe the entire config should be stored in the work-db. After init and
  work-db creation, we won't reference the config YAML file. So `cr init
  config.yml session` would be followed by `cr exec session` with no need to
  reference the config in exec. I like this...config.yml becomes a template for
  creating session.
